{"version":3,"file":"465-b8d8b15e568460cf68a6.js","mappings":"uJAAA,IAAIA,EAAS,2BACTC,EAAe,4CACfC,EAA0B,mJA2C1BC,EAAgB,KAChBC,EAAa,SAAoBC,GAEnC,OAAsB,OAAlBF,IAIJA,EAAgB,IAAIG,SAAQ,SAAUC,EAASC,GAC7C,GAAsB,oBAAXC,OAWX,GAJIA,OAAOC,QAAUL,GACnBM,QAAQC,KAAKV,GAGXO,OAAOC,OACTH,EAAQE,OAAOC,aAIjB,IACE,IAAIG,EAnEO,WAGf,IAFA,IAAIC,EAAUC,SAASC,iBAAiB,gBAAiBC,OAAOjB,EAAQ,OAE/DkB,EAAI,EAAGA,EAAIJ,EAAQK,OAAQD,IAAK,CACvC,IAAIL,EAASC,EAAQI,GAErB,GAAKjB,EAAamB,KAAKP,EAAOQ,KAI9B,OAAOR,CACT,CAEA,OAAO,IACT,CAqDmBS,GAETT,GAAUR,EACZM,QAAQC,KAAKV,GACHW,IACVA,EAxDW,SAAsBR,GACvC,IAAIkB,EAAclB,IAAWA,EAAOmB,qBAAuB,8BAAgC,GACvFX,EAASE,SAASU,cAAc,UACpCZ,EAAOQ,IAAM,GAAGJ,OAAOjB,GAAQiB,OAAOM,GACtC,IAAIG,EAAaX,SAASY,MAAQZ,SAASa,KAE3C,IAAKF,EACH,MAAM,IAAIG,MAAM,+EAIlB,OADAH,EAAWI,YAAYjB,GAChBA,CACT,CA4CiBkB,CAAa1B,IAGxBQ,EAAOmB,iBAAiB,QAAQ,WAC1BvB,OAAOC,OACTH,EAAQE,OAAOC,QAEfF,EAAO,IAAIqB,MAAM,2BAErB,IACAhB,EAAOmB,iBAAiB,SAAS,WAC/BxB,EAAO,IAAIqB,MAAM,4BACnB,GAIF,CAHE,MAAOI,GAEP,YADAzB,EAAOyB,EAET,MAnCE1B,EAAQ,KAoCZ,KA3CSJ,CA6CX,EACI+B,EAAa,SAAoBC,EAAaC,EAAMC,GACtD,GAAoB,OAAhBF,EACF,OAAO,KAGT,IAAIG,EAASH,EAAYI,WAAMC,EAAWJ,GAE1C,OArEoB,SAAyBE,EAAQD,GAChDC,GAAWA,EAAOG,kBAIvBH,EAAOG,iBAAiB,CACtBC,KAAM,YACNC,QAAS,SACTN,UAAWA,GAEf,CA0DEO,CAAgBN,EAAQD,GACjBC,CACT,EAIIO,EAAkBvC,QAAQC,UAAUuC,MAAK,WAC3C,OAAO1C,EAAW,KACpB,IACI2C,GAAa,EACjBF,EAAuB,OAAE,SAAUG,GAC5BD,GACHpC,QAAQC,KAAKoC,EAEjB,IACA,IAAIC,EAAa,WACf,IAAK,IAAIC,EAAOC,UAAUhC,OAAQiB,EAAO,IAAIgB,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EjB,EAAKiB,GAAQF,UAAUE,GAGzBN,GAAa,EACb,IAAIV,EAAYiB,KAAKC,MACrB,OAAOV,EAAgBC,MAAK,SAAUX,GACpC,OAAOD,EAAWC,EAAaC,EAAMC,EACvC,GACF,C","sources":["webpack://wedding/./node_modules/@stripe/stripe-js/dist/stripe.esm.js"],"sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.46.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n"],"names":["V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","stripePromise","loadScript","params","Promise","resolve","reject","window","Stripe","console","warn","script","scripts","document","querySelectorAll","concat","i","length","test","src","findScript","queryString","advancedFraudSignals","createElement","headOrBody","head","body","Error","appendChild","injectScript","addEventListener","error","initStripe","maybeStripe","args","startTime","stripe","apply","undefined","_registerWrapper","name","version","registerWrapper","stripePromise$1","then","loadCalled","err","loadStripe","_len","arguments","Array","_key","Date","now"],"sourceRoot":""}